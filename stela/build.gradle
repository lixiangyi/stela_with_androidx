apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
//apply plugin: 'org.greenrobot.greendao'
//apply from: 'jacoco.gradle'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
android {
    signingConfigs {
        config {
            keyAlias 'stelaKey'
            keyPassword '5711001175'
            storeFile file('./stela_id.jks')
            storePassword '5t311b00k'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.stela.comics_unlimited"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        //AndroidJunitRunner必须要显示指定在defaultConfig中，使用Gradle依赖管理无法使其生效
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        renderscriptTargetApi rootProject.ext.android["renderscriptTargetApi"]
        renderscriptSupportModeEnabled true    // Enable RS support
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled false
            minifyEnabled false
//            useProguard true
//            zipAlignEnabled true
//            shrinkResources true
//             Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
            signingConfig signingConfigs.config
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

    }
    //自动创建编译后的名称，格式：包名后半部分_versionName_versionCode_time_buildtype_apk (quDancing_V1.0.0_1_20180527_release.apk)
    android.applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                def time = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))//获取当前打包时间
                def appName = defaultConfig.applicationId.substring(defaultConfig.applicationId.lastIndexOf(".") + 1)//截取包名最后部分作为名称
                def name = "${appName}_V${defaultConfig.versionName}_${defaultConfig.versionCode}_${time}_${buildType.name}.apk"
                outputFileName = name
            }
    }
    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }
//    lintOptions {
//        checkReleaseBuilds false
//        // Or, if you prefer, you can continue to check for errors in release builds,
//        // but continue the build even when errors are found:
//        abortOnError false
//    }
//    configurations {all {exclude module: 'httpclient'exclude module: 'commons-logging'}}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':base-libs')
    implementation files('libs/com.stela.analytics-0.1.jar')
//    implementation files('libs/com.stela.analytics-0.1_release.jar')
    //base
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]

    //
    //noinspection GradleCompatible
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    implementation 'com.github.lawloretienne:trestle:0.0.10'

    //multidex
    implementation rootProject.ext.dependencies["multidex"]

    //canary
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    testImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    implementation rootProject.ext.dependencies["javax_annotation"]

    //ui
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["CustomPopWindow"]

    //UI测试
    androidTestImplementation(rootProject.ext.dependencies["espresso-core"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation(rootProject.ext.dependencies["espresso-idling-resource"]) {
        exclude module: 'support-annotations'
    }
    androidTestImplementation rootProject.ext.dependencies["espresso-contrib"]
    androidTestImplementation rootProject.ext.dependencies["espresso-intents"]
    androidTestImplementation rootProject.ext.dependencies["espresso-accessibility"]
    androidTestImplementation rootProject.ext.dependencies["espresso-web"]
    androidTestImplementation rootProject.ext.dependencies["idling-concurrent"]

    //unit test
    testImplementation rootProject.ext.dependencies["junit"]
    testImplementation rootProject.ext.dependencies["mockito"]
    testImplementation rootProject.ext.dependencies["powermock-module-junit4"]
    testImplementation rootProject.ext.dependencies["powermock-module-junit4-rule"]
    testImplementation rootProject.ext.dependencies["powermock-api-mockito2"]

    //注意这里是mockito2
    testImplementation rootProject.ext.dependencies["powermock-classloading-xstream"]
    testImplementation rootProject.ext.dependencies["robolectric"]
    testImplementation rootProject.ext.dependencies["shadows-support-v4"]
    testImplementation rootProject.ext.dependencies["shadows-multidex"]

    //支持Multidex功能
    androidTestImplementation rootProject.ext.dependencies["runner"]
    //
    implementation 'commons-codec:commons-codec:1.3'

    //fire base
    implementation 'com.google.firebase:firebase-core:17.0.1'

    //firebase 推送
    implementation 'com.google.firebase:firebase-messaging:19.0.1'

    //firebase crash
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    //firebase deeplink
    implementation 'com.google.firebase:firebase-dynamic-links:17.0.0'
    //
    implementation 'com.google.firebase:firebase-config:16.5.0'
    //圆角图片
    implementation 'com.makeramen:roundedimageview:2.3.0'
    // analytics-android-sdk
    implementation 'com.amazonaws:aws-android-sdk-apigateway-core:2.10.1'


    //facebook
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    //9.0 兼容
//    implementation "commons-logging:commons-logging:1.2"
//    implementation 'com.facebook.android:facebook-applinks:[5,6)'
//    implementation 'com.facebook.android:facebook-core:[5,6)'

    //检测截屏
    implementation 'com.github.piasy:rxscreenshotdetector:1.2.0'
    //屏幕适配
//    implementation 'me.jessyan:autosize:1.1.2'
    //shadow
//    implementation 'com.henley.android:shadowlayout:1.0.1'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    implementation 'com.chaos.view:pinview:1.4.3'
    implementation 'com.google.firebase:firebase-config:19.0.1'
    //google 支付新库
//    implementation 'com.android.billingclient:billing:2.0.3'
    implementation "androidx.versionedparcelable:versionedparcelable:1.1.0"

}
//解决支持库版本不兼容问题
//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'com.android.support') {
//            if (!requested.name.startsWith("multidex")) {
//                details.useVersion '25.3.0'
//            }
//        }
//    }
//}
repositories {
    mavenCentral()
}

// Add the following line to the bottom of the file:
apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin

